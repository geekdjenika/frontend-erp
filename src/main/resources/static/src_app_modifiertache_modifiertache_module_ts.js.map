{"version":3,"file":"src_app_modifiertache_modifiertache_module_ts.js","mappings":"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","sources":["./src/app/cloche/cloche.component.ts","./src/app/modifiertache/modifiertache-routing.module.ts","./src/app/modifiertache/modifiertache.module.ts","./src/app/modifiertache/modifiertache.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { PopupNotificationPage } from '../popup-notification/popup-notification.page';\r\nimport { NotificationService } from '../services/notification/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-cloche',\r\n  templateUrl: './cloche.component.html',\r\n  styleUrls: ['./cloche.component.scss'],\r\n})\r\nexport class ClocheComponent implements OnInit {\r\nnombre:any\r\nUtilisateur:any\r\nnotif:any\r\n  notifTotal: any;\r\n  constructor(private router: Router,private popoverCtrl: PopoverController,private notificationService:NotificationService) { }\r\n \r\n\r\n\r\n  ngOnInit() {\r\n    this.Utilisateur=JSON.parse(localStorage.getItem('utilisateur'));\r\n    \r\n    this.notificationService.GetAllNotif(this.Utilisateur.login, this.Utilisateur.password).subscribe(retour=>{\r\n          this.notif=retour.data;\r\n          console.log(this.notif)\r\n          this.notifTotal=retour.data.length\r\n          console.log(this.notif)\r\n        })\r\n  }\r\n  \r\n\r\n  async OpenNotification(id){\r\n    // this.router.navigate((['tabs',\"message\",id]));\r\n      const popover = await this.popoverCtrl.create({\r\n        component:PopupNotificationPage,\r\n        event:id,\r\n        cssClass:\"notif-popup\"\r\n      });\r\n      await popover.present()\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ModifiertachePage } from './modifiertache.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ModifiertachePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ModifiertachePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ModifiertachePageRoutingModule } from './modifiertache-routing.module';\r\n\r\nimport { ModifiertachePage } from './modifiertache.page';\r\nimport { ClocheComponent } from '../cloche/cloche.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ModifiertachePageRoutingModule\r\n  ],\r\n  declarations: [ModifiertachePage,ClocheComponent]\r\n})\r\nexport class ModifiertachePageModule {}\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActiviteService } from '../services/activite/activite.service';\r\nimport { EntiteService } from '../services/entite/entite.service';\r\nimport { SalleServiceService } from '../services/salles/salle-service.service';\r\nimport { TachedesignationService } from '../services/tahedesignations/tachedesignation.service';\r\nimport { StatusService } from '../services/statut/status.service';\r\nimport { UtilisateurService } from '../services/utilisateur/utilisateur.service';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-modifiertache',\r\n  templateUrl: './modifiertache.page.html',\r\n  styleUrls: ['./modifiertache.page.scss'],\r\n})\r\nexport class ModifiertachePage implements OnInit {\r\n  Entites: any;\r\n  Utilisateur: any;\r\n  Allstatut: any;\r\n  sallesDipo: any\r\n  sallesDipoLength: any\r\n  personEx: any\r\n  personIn: any\r\n  //:::::::::::::::::::activitÃ© encour::::::::::::::::::::::::::::::::::::::::::::::\r\n  ActiviteCourant: any\r\n  // etatselect : string;\r\n  idRecuperer: any\r\n  nom: string;\r\n  etat: boolean;\r\n\r\n  //:::::::::::::designation::::::::::::::::::::::::\r\n  designations: any;\r\n  lieu: any\r\n  statutt: any\r\n  designation: any;\r\n  designe: any\r\n\r\n  //:::::::::::::::::::::::::create Tache::::::::::::::::::::::::\r\n\r\n  idPorteurexterne: any;\r\n  idPorteurinterne: any;\r\n  libelleSalle: any;\r\n  idActivites: any;\r\n  libelleDesignation: any;\r\n  libelleStatut: any;\r\n  personneEx: any;\r\n  personneIn: any;\r\n  desi: any;\r\n\r\n  alertTrue: boolean = false;\r\n  alertFalse: boolean = false;\r\n  \r\n\r\n\r\n  idTache: number;\r\n  valeurTacheParId: any;\r\n\r\n  datedebut: any;\r\n  datefin: any;\r\n  Commissions: any;\r\n  \r\n \r\n\r\n porteurExterne: any;\r\n porteurInterne: any;\r\n salle: any;\r\n commissionsInterne: any;\r\n commissionsExterne: any;\r\n  porteurInternePrenom: any;\r\n  porteurExternePrenom: any;\r\n\r\n\r\n  // if (etatselect = \"Actif\") {\r\n  //   this.etat = true\r\n  // } elsif (etatselect = \"Inactif\") {\r\n  //   this.etat = false\r\n  // }\r\n  constructor(private tachedesign: TachedesignationService, private user: UtilisateurService, private route: ActivatedRoute, private statut: StatusService, private activiteService: ActiviteService, private salleService: SalleServiceService, private entiteService: EntiteService, private modalController: ModalController) { }\r\n\r\n  ngOnInit() {\r\n\r\nthis.idTache = this.route.snapshot.params['id'];\r\nthis.Utilisateur = JSON.parse(localStorage.getItem('utilisateur'))\r\n\r\n this.tachedesign.RecupTacheById(this.Utilisateur.login, this.Utilisateur.password, this.idTache).subscribe(retour => {\r\n  this.valeurTacheParId = retour.data;\r\n\r\n  this.designation = this.valeurTacheParId.designation.libelle \r\n  this.datedebut = this.valeurTacheParId.datadebut\r\n  this.datefin = this.valeurTacheParId.datefin\r\n  this.salle = this.valeurTacheParId.salle.libelle\r\n  this.statut = this.valeurTacheParId.statut.libelle\r\n  this.porteurInterne = this.valeurTacheParId.porteurInterne.nom\r\n  this.porteurInternePrenom = this.valeurTacheParId.porteurInterne.prenom\r\n  this.porteurExterne = this.valeurTacheParId.porteurExterne.nom\r\n  this.porteurExternePrenom = this.valeurTacheParId.porteurExterne.prenom\r\n  this.commissionsInterne = this.valeurTacheParId.commissionsInterne\r\n  this.commissionsExterne = this.valeurTacheParId.commissionsExterne\r\n\r\n  console.log(this.valeurTacheParId);\r\n\r\n  \r\n })\r\n\r\n \r\n    \r\n  \r\n\r\n\r\n\r\n\r\n\r\n    //::::::::::::::recuperation de l'id de l'activitÃ© :::::::::::::::::::::::::::::::\r\n\r\n    // this.idActivites = this.route.snapshot.params['id'];\r\n    //::::::::::::::fin de recuperation :::::::::::::::::::::::::::::::\r\n\r\n    //::::::::::::::recuperation du User qui se trouve dans le LocalStorage :::::::::::::::::::::::::::::::\r\n\r\n    // this.Utilisateur = JSON.parse(localStorage.getItem('utilisateur'));\r\n\r\n    // this.salleService.getSalleDisponible(this.Utilisateur.login, this.Utilisateur.password).subscribe(data => {\r\n    //   this.sallesDipo = data.data;\r\n    //   this.sallesDipoLength = data.data.length\r\n    //   console.log(data.data)\r\n    // });\r\n\r\n\r\n    // this.entiteService.getAllEntites(this.Utilisateur.login, this.Utilisateur.password).subscribe(retour => {\r\n    //   this.Entites = retour.data\r\n    //   console.log(this.Entites)\r\n    // });\r\n\r\n\r\n\r\n\r\n    // this.tachedesign.getAlldesignation(this.Utilisateur.login, this.Utilisateur.password).subscribe(retour => {\r\n    //   this.designations = retour.data\r\n    //   console.log(this.designations)\r\n    // })\r\n\r\n\r\n\r\n\r\n    //::::::::::::::::::::::::::::: getactivitybyId:::::::::::::::::::::::::::::::::::::::::::::::\r\n    // this.activiteService.getactivitybyId(this.Utilisateur.login, this.Utilisateur.password, this.idActivites).subscribe(retour => {\r\n    //   this.idActivites\r\n    //   this.ActiviteCourant = retour.data\r\n    //   console.log(this.ActiviteCourant)\r\n    //   this.idRecuperer = this.ActiviteCourant.id;\r\n\r\n    // })\r\n\r\n    // this.statut.getStatut(this.Utilisateur.login, this.Utilisateur.password).subscribe(retour => {\r\n    //   this.Allstatut = retour.data\r\n    //   console.log(this.Allstatut)\r\n    // })\r\n\r\n\r\n    // this.activiteService.getpersonnelsexternes(this.Utilisateur.login, this.Utilisateur.password).subscribe(retour => {\r\n    //   this.personEx = retour.data\r\n    //   console.log(retour)\r\n    // })\r\n    //:::::::::::::::::::: get all User ::::::::::::::::::::::::::::::::::::::\r\n\r\n    // this.user.getAllUsers(this.Utilisateur.login, this.Utilisateur.password).subscribe(retour => {\r\n    //   this.personIn = retour.data\r\n    //   console.log(this.personIn)\r\n    // });\r\n\r\n    // for (let index = 0; index < this.personEx.length; index++) {\r\n    //   this.personIn = this.personIn\r\n\r\n    // }\r\n\r\n  }\r\n\r\n\r\n  // creerDesignation() {\r\n\r\n\r\n    //   this.tachedesign.creerDesignation(this.Utilisateur.login, this.Utilisateur.password, this.libelleDesignation).subscribe(retour=>{\r\n    //     // next : reponse => {\r\n    //     //   alert(reponse.data)\r\n    //     // },\r\n    //     // error : data => {\r\n    //     //   alert(data.data)\r\n    //     // }\r\n\r\n    //     this.desi = retour.data\r\n    //     console.log(this.desi);\r\n    //   })\r\n\r\n\r\n\r\n\r\n  //   this.tachedesign.creerDesignation(this.Utilisateur.login, this.Utilisateur.password, this.libelleDesignation).subscribe(retour => {\r\n\r\n  //     console.log(retour)\r\n  //     if (retour.message == 'ok') {\r\n  //       this.alertTrue = true\r\n  //       this.alertFalse = false\r\n  //     } else {\r\n  //       this.alertTrue = false\r\n  //       this.alertFalse = true\r\n  //     }\r\n  //   })\r\n  //   this.modalController.dismiss()\r\n  // }\r\n\r\n\r\n\r\n\r\n  // createTache() {\r\n\r\n  //   var idSalle: any;\r\n\r\n  //   var idDesignation: any;\r\n  //   var idStatus: any;\r\n\r\n  //   //::::::::::::::::::::::::::::::::recuperer l'id de la salle::::::::::::::::::::::::::::::::\r\n\r\n  //   for (let i = 0; i < this.sallesDipo.length; i++) {\r\n  //     if (this.sallesDipo[i].libelle == this.libelleSalle) {\r\n  //       idSalle = this.sallesDipo[i]\r\n  //     }\r\n  //   }\r\n\r\n\r\n  //   for (let i = 0; i < this.designations.length; i++) {\r\n  //     if (this.designations[i].libelle == this.libelleDesignation) {\r\n  //       idDesignation = this.designations[i]\r\n  //     }\r\n  //   }\r\n\r\n  //   for (let i = 0; i < this.Allstatut.length; i++) {\r\n  //     if (this.Allstatut[i].libelle == this.libelleStatut) {\r\n  //       idStatus = this.Allstatut[i]\r\n  //     }\r\n  //   }\r\n\r\n\r\n  //   for (let i = 0; i < this.personEx.length; i++) {\r\n  //     if (this.personEx[i].libelle == this.personneEx) {\r\n  //       this.idPorteurexterne = this.personEx[i]\r\n  //     }\r\n  //   }\r\n\r\n\r\n  //   for (let i = 0; i < this.personIn.length; i++) {\r\n  //     if (this.personIn[i].libelle == this.personneIn) {\r\n  //       this.idPorteurinterne = this.personIn[i]\r\n  //     }\r\n  //   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  //   var FormateursUsers = [];\r\n  //   var FormateursExters = [];\r\n\r\n\r\n  //   for (let i = 0; i < this.Commissions.length; i++) {\r\n  //     const array = this.Commissions[i].split(\" \")\r\n\r\n  //     for (let j = 0; j < this.personIn.length; j++) {\r\n\r\n  //       if (this.personIn[j].nom == array[0] && this.personIn[j].prenom == array[1]) {\r\n  //         console.log(this.personIn[j])\r\n\r\n  //         FormateursUsers.push(this.personIn[j])\r\n  //       }\r\n  //     }\r\n\r\n  //     for (let j = 0; j < this.personEx.length; j++) {\r\n\r\n  //       if (this.personEx[j].nom == array[0] && this.personEx[j].prenom == array[1]) {\r\n  //         console.log(this.personEx[j])\r\n\r\n  //         FormateursExters.push(this.personEx[j])\r\n  //       }\r\n  //     }\r\n\r\n  //   }\r\n\r\n\r\n\r\n  //   var tache = [{\r\n  //     \"datedebut\": this.datedebut,\r\n  //     \"datefin\": this.datefin,\r\n  //     \"activite\": this.ActiviteCourant,\r\n  //     \"designation\": idDesignation,\r\n  //     \"statut\": idStatus,\r\n  //     \"porteurExterne\": this.idPorteurexterne,\r\n  //     \"porteurInterne\": this.idPorteurinterne,\r\n  //     \"salle\": idSalle,\r\n  //     \"commissionsInterne\": FormateursUsers,\r\n  //     \"commissionsExterne\": FormateursExters\r\n  //   }]\r\n  //   console.log(tache)\r\n\r\n\r\n  //   this.tachedesign.CreateTache(this.Utilisateur.login, this.Utilisateur.password, tache).subscribe(retour => {\r\n  //     console.log(retour)\r\n  //   })\r\n\r\n  // }\r\n\r\n\r\n\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}